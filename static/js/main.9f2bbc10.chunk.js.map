{"version":3,"sources":["assets/background/day.jpg","assets/background/night.jpg","components/CityInput/CityInput.js","components/Card/Card.js","layouts/MainPage/MainPage.js","App.js","index.js"],"names":["module","exports","Form","styled","form","Input","input","Button","button","CityInput","state","value","handleChange","e","setState","target","onSubmit","props","change","htmlFor","type","placeholder","id","name","this","onChange","className","Component","Content","div","isDayTime","day","night","active","Text","p","Temperature","Img","img","Info","time","Date","Card","data","city","src","picture","alt","style","fontSize","temperature","fontWeight","position","top","marginRight","textTransform","toLocaleTimeString","marginTop","text","MainWindow","Header","h2","WeatherApp","locationKey","fetchCity","fetch","then","response","json","console","log","LocalizedName","Key","handleRequestData","catch","err","key","WeatherIcon","Metric","Value","WeatherText","IsDayTime","window","localStorage","setItem","JSON","stringify","handleRequestCity","preventDefault","scrollToBottom","messagesEnd","scrollIntoView","behavior","parse","getItem","float","clear","ref","el","Wrapper","App","MainPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f2bbc10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/day.bdce5924.jpg\";","module.exports = __webpack_public_path__ + \"static/media/night.aeda4e63.jpg\";","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Form = styled.form`\r\n  padding: 1em;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  text-align: center;\r\n  font-size: 1.4em;\r\n  padding: 0.3em 0.4em;\r\n  border-radius: 1em;\r\n  border: 1px solid #e95312;\r\n  outline: none;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 1.5em;\r\n  background-color: #e95312;\r\n  width: 100px;\r\n  color: white;\r\n  border-radius: 1em;\r\n  border: 1px solid #e95312;\r\n  margin-left: 0.3em;\r\n  transition: 0.3s;\r\n  cursor: pointer;\r\n  outline: none;\r\n  &:hover {\r\n    color: #e95312;\r\n    background-color: #fff;\r\n  }\r\n`;\r\n\r\nclass CityInput extends Component {\r\n  state = {\r\n    value: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form\r\n        onSubmit={e => {\r\n          this.props.change(e, this.state.value);\r\n          this.setState({ value: '' });\r\n        }}\r\n      >\r\n        <label htmlFor=\"city\">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"wprowadÅº miasto\"\r\n            id=\"city\"\r\n            name=\"city\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <Button>\r\n          <i className=\"fas fa-search\"></i>\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CityInput;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport day from 'assets/background/day.jpg';\r\nimport night from 'assets/background/night.jpg';\r\n\r\nconst Content = styled.div`\r\n  margin: 20px auto 20px auto;\r\n  width: 90%;\r\n  height: 90vh;\r\n  border: 1px solid #e95312;\r\n  border-radius: 1em;\r\n  background-image: url(${props => (props.isDayTime ? day : night)});\r\n  display: ${props => (props.active ? 'flex' : 'none')};\r\n  flex-direction: column;\r\n  background-size: cover;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-family: 'Montserrat', sans-serif;\r\n  width: 100%;\r\n  text-align: center;\r\n  font-size: 1.4em;\r\n  color: ${props => (props.isDayTime ? 'black' : 'white')};\r\n`;\r\n\r\nconst Temperature = styled.p`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  width: 3em;\r\n  height: 2em;\r\n  line-height: 2em;\r\n  border-radius: 1em;\r\n  background-color: white;\r\n  top: -1em;\r\n  text-align: center;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 60%;\r\n  margin: 20px auto 0 auto;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  position: relative;\r\n  margin: auto 0 0 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 40%;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst time = new Date();\r\n\r\nconst Card = ({ data }) => {\r\n  return (\r\n    <Content active={data.city} isDayTime={data.isDayTime}>\r\n      <Img src={`./images/weatherIcons/${data.picture}-s.png`} alt=\"obrazek\" />\r\n\r\n      <Info>\r\n        <Temperature\r\n          isDayTime={data.isDayTime}\r\n          style={{\r\n            fontSize: '3em',\r\n          }}\r\n        >\r\n          {data.temperature}\r\n          <i\r\n            className=\"far fa-circle\"\r\n            style={{\r\n              fontSize: '0.2em',\r\n              fontWeight: 'normal',\r\n              position: 'relative',\r\n              top: '-3em',\r\n              marginRight: '0.4em',\r\n            }}\r\n          ></i>\r\n          <i\r\n            style={{\r\n              fontSize: '0.9em',\r\n            }}\r\n            className=\"fas fa-thermometer-quarter\"\r\n          ></i>\r\n        </Temperature>\r\n        <Text\r\n          style={{\r\n            textTransform: 'uppercase',\r\n            fontSize: '2em',\r\n            position: 'relative',\r\n            top: '-20px',\r\n          }}\r\n          isDayTime={data.isDayTime}\r\n        >\r\n          {data.city}\r\n        </Text>\r\n        <Text isDayTime={data.isDayTime}>{time.toLocaleTimeString()}</Text>\r\n        <Text isDayTime={data.isDayTime} style={{ marginTop: '20px', textTransform: 'uppercase' }}>\r\n          {data.text}\r\n        </Text>\r\n      </Info>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport CityInput from 'components/CityInput/CityInput';\r\nimport Card from 'components/Card/Card';\r\n\r\nconst MainWindow = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 20px;\r\n  font-family: sans-serif;\r\n  max-height: 100%;\r\n`;\r\n\r\nconst Header = styled.h2`\r\n  text-align: center;\r\n  color: #e95312;\r\n`;\r\n\r\nclass WeatherApp extends Component {\r\n  state = {\r\n    locationKey: '',\r\n    city: '',\r\n    picture: '',\r\n    temperature: '',\r\n    text: '',\r\n    isDayTime: false,\r\n  };\r\n\r\n  fetchCity = city => {\r\n    fetch(\r\n      // `http://dataservice.accuweather.com/locations/v1/cities/search?apikey=s9wGCHoGfpd6EPFPsGyniPfgHgRJh4l4&q=${city}`,\r\n      `https://dataservice.accuweather.com/locations/v1/cities/search?apikey=\t8NohnMk0lcfUPmDAdCiaKBIwZYSQ5t46&q=${city}`,\r\n    )\r\n      .then(response => response.json())\r\n\r\n      .then(data => {\r\n        console.log(data);\r\n        this.setState({\r\n          city: data[0].LocalizedName,\r\n          locationKey: data[0].Key,\r\n        });\r\n\r\n        this.handleRequestData(this.state.locationKey);\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleRequestData = key => {\r\n    fetch(\r\n      // `http://dataservice.accuweather.com/currentconditions/v1/${key}?apikey=s9wGCHoGfpd6EPFPsGyniPfgHgRJh4l4`,\r\n      `https://dataservice.accuweather.com/currentconditions/v1/${key}?apikey=8NohnMk0lcfUPmDAdCiaKBIwZYSQ5t46`,\r\n    )\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          picture: data[0].WeatherIcon,\r\n          temperature: data[0].Temperature.Metric.Value,\r\n          text: data[0].WeatherText,\r\n          isDayTime: data[0].IsDayTime,\r\n        });\r\n        window.localStorage.setItem('weatherData', JSON.stringify(this.state));\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleRequestCity = (e, data) => {\r\n    e.preventDefault();\r\n    this.fetchCity(data);\r\n  };\r\n\r\n  scrollToBottom = () => {\r\n    this.messagesEnd.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.text) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const data = JSON.parse(window.localStorage.getItem('weatherData'));\r\n    if (data) this.fetchCity(data.city);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MainWindow>\r\n        <Header>AccuPogoda</Header>\r\n        <CityInput change={this.handleRequestCity} />\r\n        <Card data={this.state} />\r\n        <div\r\n          style={{ float: 'left', clear: 'both' }}\r\n          ref={el => {\r\n            this.messagesEnd = el;\r\n          }}\r\n        ></div>\r\n      </MainWindow>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherApp;\r\n","import React from 'react';\nimport MainPage from 'layouts/MainPage/MainPage';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: auto;\n  height: 100vh;\n  width: 100%;\n  max-width: 415px;\n  background-color: rgba(242, 242, 242, 0.8);\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <MainPage />\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}